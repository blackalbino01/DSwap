{
  "contractName": "Swap",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Swap.sol\":\"Swap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1abc8ac389c6c7596c1e39bcc8b1ed3b7f8ecc0da382ea1765a4b444a8eb6113\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c950bccf97e08364d09f7ac0927ab5a5c43906be4f9ce579ec47b01108a0eaeb\",\"dweb:/ipfs/QmSfbQxHfvPvA6WiFtXL8hsrHobSRjF3bpUK51HDTkbrmg\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"project:/contracts/Swap.sol\":{\"keccak256\":\"0x9a8894bc48649a5431225a014a4c09571e5da8c90fc4b79b0467b22966ef3ccd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7947a9cbeab665b44988b78b2ad00b46d62567aab2a9ccda7acfeae1e0b5916d\",\"dweb:/ipfs/QmdJYYJmwURne9A2qXWLXqzt7FJLUZCefsxBSoEDNyz4w2\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610adf380380610adf83398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610108565b60008151905061007e816100f1565b92915050565b60006020828403121561009657600080fd5b60006100a48482850161006f565b91505092915050565b60006100b8826100d1565b9050919050565b60006100ca826100ad565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100fa816100bf565b811461010557600080fd5b50565b60805160601c6109b161012e6000398060df528061011552806101db52506109b16000f3fe6080604052600436106100385760003560e01c8063089fe6aa14610044578063c31c9c071461006f578063df791e501461009a5761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100d7565b60405161006691906108a8565b60405180910390f35b34801561007b57600080fd5b506100846100dd565b6040516100919190610871565b60405180910390f35b3480156100a657600080fd5b506100c160048036038101906100bc91906106ee565b610101565b6040516100ce91906108c3565b60405180910390f35b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061010f8433308561028e565b61013a847f0000000000000000000000000000000000000000000000000000000000000000846104ae565b60006040518061010001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b8152600401610232919061088c565b602060405180830381600087803b15801561024c57600080fd5b505af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610284919061073d565b9150509392505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061038d578051825260208201915060208101905060208303925061036a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b50915091508180156104345750600081511480610433575080806020019051602081101561042157600080fd5b81019080805190602001909291905050505b5b6104a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260038152602001807f535446000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061058f578051825260208201915060208101905060208303925061056c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105f1576040519150601f19603f3d011682016040523d82523d6000602084013e6105f6565b606091505b50915091508180156106365750600081511480610635575080806020019051602081101561062357600080fd5b81019080805190602001909291905050505b5b6106a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f534100000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000813590506106be8161094d565b92915050565b6000813590506106d381610964565b92915050565b6000815190506106e881610964565b92915050565b60008060006060848603121561070357600080fd5b6000610711868287016106af565b9350506020610722868287016106af565b9250506040610733868287016106c4565b9150509250925092565b60006020828403121561074f57600080fd5b600061075d848285016106d9565b91505092915050565b61076f816108de565b82525050565b61077e81610929565b82525050565b6101008201600082015161079b6000850182610766565b5060208201516107ae6020850182610766565b5060408201516107c16040850182610835565b5060608201516107d46060850182610766565b5060808201516107e76080850182610853565b5060a08201516107fa60a0850182610853565b5060c082015161080d60c0850182610853565b5060e082015161082060e0850182610826565b50505050565b61082f816108f0565b82525050565b61083e81610910565b82525050565b61084d81610910565b82525050565b61085c8161091f565b82525050565b61086b8161091f565b82525050565b60006020820190506108866000830184610775565b92915050565b6000610100820190506108a26000830184610784565b92915050565b60006020820190506108bd6000830184610844565b92915050565b60006020820190506108d86000830184610862565b92915050565b60006108e9826108f0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b60006109348261093b565b9050919050565b6000610946826108f0565b9050919050565b610956816108de565b811461096157600080fd5b50565b61096d8161091f565b811461097857600080fd5b5056fea2646970667358221220f1712f21aab5a7eaa8837546add23c9c31567d2550f8363085d9da4318c45db864736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c8063089fe6aa14610044578063c31c9c071461006f578063df791e501461009a5761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100d7565b60405161006691906108a8565b60405180910390f35b34801561007b57600080fd5b506100846100dd565b6040516100919190610871565b60405180910390f35b3480156100a657600080fd5b506100c160048036038101906100bc91906106ee565b610101565b6040516100ce91906108c3565b60405180910390f35b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061010f8433308561028e565b61013a847f0000000000000000000000000000000000000000000000000000000000000000846104ae565b60006040518061010001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b8152600401610232919061088c565b602060405180830381600087803b15801561024c57600080fd5b505af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610284919061073d565b9150509392505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061038d578051825260208201915060208101905060208303925061036a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b50915091508180156104345750600081511480610433575080806020019051602081101561042157600080fd5b81019080805190602001909291905050505b5b6104a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260038152602001807f535446000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061058f578051825260208201915060208101905060208303925061056c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105f1576040519150601f19603f3d011682016040523d82523d6000602084013e6105f6565b606091505b50915091508180156106365750600081511480610635575080806020019051602081101561062357600080fd5b81019080805190602001909291905050505b5b6106a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f534100000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000813590506106be8161094d565b92915050565b6000813590506106d381610964565b92915050565b6000815190506106e881610964565b92915050565b60008060006060848603121561070357600080fd5b6000610711868287016106af565b9350506020610722868287016106af565b9250506040610733868287016106c4565b9150509250925092565b60006020828403121561074f57600080fd5b600061075d848285016106d9565b91505092915050565b61076f816108de565b82525050565b61077e81610929565b82525050565b6101008201600082015161079b6000850182610766565b5060208201516107ae6020850182610766565b5060408201516107c16040850182610835565b5060608201516107d46060850182610766565b5060808201516107e76080850182610853565b5060a08201516107fa60a0850182610853565b5060c082015161080d60c0850182610853565b5060e082015161082060e0850182610826565b50505050565b61082f816108f0565b82525050565b61083e81610910565b82525050565b61084d81610910565b82525050565b61085c8161091f565b82525050565b61086b8161091f565b82525050565b60006020820190506108866000830184610775565b92915050565b6000610100820190506108a26000830184610784565b92915050565b60006020820190506108bd6000830184610844565b92915050565b60006020820190506108d86000830184610862565b92915050565b60006108e9826108f0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b60006109348261093b565b9050919050565b6000610946826108f0565b9050919050565b610956816108de565b811461096157600080fd5b50565b61096d8161091f565b811461097857600080fd5b5056fea2646970667358221220f1712f21aab5a7eaa8837546add23c9c31567d2550f8363085d9da4318c45db864736f6c63430007060033",
  "immutableReferences": {
    "365": [
      {
        "length": 32,
        "start": 223
      },
      {
        "length": 32,
        "start": 277
      },
      {
        "length": 32,
        "start": 475
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1040:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "89:99:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "99:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "114:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "108:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "99:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "176:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ISwapRouter_$187",
                      "nodeType": "YulIdentifier",
                      "src": "130:45:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "130:52:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "130:52:5"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ISwapRouter_$187_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "67:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "75:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "83:5:5",
                "type": ""
              }
            ],
            "src": "7:181:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "290:226:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "336:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "345:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "348:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "338:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "338:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "338:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "311:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "320:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "307:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "307:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "332:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "303:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "303:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "300:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "362:147:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "377:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "391:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "381:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "406:93:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "471:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "482:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "467:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "467:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ISwapRouter_$187_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "416:50:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "416:83:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "406:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ISwapRouter_$187_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "260:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "271:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "283:6:5",
                "type": ""
              }
            ],
            "src": "194:322:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "567:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "577:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "606:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "588:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "577:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "549:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "559:7:5",
                "type": ""
              }
            ],
            "src": "522:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "688:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "698:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "727:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "709:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "709:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "698:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ISwapRouter_$187",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "670:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "680:7:5",
                "type": ""
              }
            ],
            "src": "624:115:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "790:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "800:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "815:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "811:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "800:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "772:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "782:7:5",
                "type": ""
              }
            ],
            "src": "745:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "939:98:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1015:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1024:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1027:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1017:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1017:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1017:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "962:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1006:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ISwapRouter_$187",
                              "nodeType": "YulIdentifier",
                              "src": "969:36:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "969:43:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "959:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "959:54:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "949:2:5"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ISwapRouter_$187",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "932:5:5",
                "type": ""
              }
            ],
            "src": "877:160:5"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_ISwapRouter_$187_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$187(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$187_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$187_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$187(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$187(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$187(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5968:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:5",
                "type": ""
              }
            ],
            "src": "7:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:5",
                "type": ""
              }
            ],
            "src": "152:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "370:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "385:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "379:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "428:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "401:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "401:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "401:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "338:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "346:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "354:5:5",
                "type": ""
              }
            ],
            "src": "297:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "546:452:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "592:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "601:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "604:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "594:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "594:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "594:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "567:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "576:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "563:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "563:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "588:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "556:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "618:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "633:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "647:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "637:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "662:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "697:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "708:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "693:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "693:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "717:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "672:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "662:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "745:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "760:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "774:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "764:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "790:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "825:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "836:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "821:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "821:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "845:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "800:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "790:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "873:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "888:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "902:2:5",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "892:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "918:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "953:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "964:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "949:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "949:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "973:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "928:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "918:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "500:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "511:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "523:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "531:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "539:6:5",
                "type": ""
              }
            ],
            "src": "446:552:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1081:207:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1127:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1136:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1139:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1129:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1129:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1129:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1102:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1111:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1098:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1098:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1123:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1094:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1094:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1091:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1153:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1168:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1182:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1172:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1197:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1243:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1254:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1239:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1239:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1263:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1207:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1207:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1197:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1051:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1062:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1074:6:5",
                "type": ""
              }
            ],
            "src": "1004:284:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1349:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1366:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1389:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1371:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1371:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1359:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1359:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1359:37:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1337:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1344:3:5",
                "type": ""
              }
            ],
            "src": "1294:108:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1492:85:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1509:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1564:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ISwapRouter_$187_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1514:49:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1514:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1502:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1502:69:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1502:69:5"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1480:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1487:3:5",
                "type": ""
              }
            ],
            "src": "1408:169:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1821:1479:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1831:28:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1847:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1852:6:5",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1843:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1843:16:5"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1835:4:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1869:167:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1907:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1937:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1944:4:5",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1933:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1933:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1927:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1927:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "1911:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "1997:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2015:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2020:4:5",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2011:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2011:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1963:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1963:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1963:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2046:168:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2085:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2115:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2122:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2111:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2111:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2105:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2105:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2089:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2175:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2193:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2198:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2189:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2189:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2141:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2141:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2141:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2224:161:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2258:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2288:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2295:4:5",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2284:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2284:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2278:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2278:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2262:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2346:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2364:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2369:4:5",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2360:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2360:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint24_to_t_uint24",
                          "nodeType": "YulIdentifier",
                          "src": "2314:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2314:61:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2314:61:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2395:169:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2435:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2465:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2472:4:5",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2461:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2461:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2455:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2455:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2439:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2525:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2543:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2548:4:5",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2539:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2539:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2491:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2491:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2491:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2574:168:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2613:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2643:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2650:4:5",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2639:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2639:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2633:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2633:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2617:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2703:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2721:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2726:4:5",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2717:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2717:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2669:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2669:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2669:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2752:168:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2791:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2821:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2828:4:5",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2817:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2817:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2811:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2811:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2795:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2881:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2899:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2904:4:5",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2895:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2895:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2847:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2847:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2930:176:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2977:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3007:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3014:4:5",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3003:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3003:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2997:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2997:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2981:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3067:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3085:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3090:4:5",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3081:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3081:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3033:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3033:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3033:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3116:177:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3164:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3194:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3201:4:5",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3190:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3190:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3184:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3184:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3168:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3254:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3272:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3277:4:5",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3268:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3268:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint160_to_t_uint160",
                          "nodeType": "YulIdentifier",
                          "src": "3220:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3220:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3220:63:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1808:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1815:3:5",
                "type": ""
              }
            ],
            "src": "1677:1623:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3361:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3378:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3401:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint160",
                          "nodeType": "YulIdentifier",
                          "src": "3383:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3383:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3371:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3371:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3371:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3349:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3356:3:5",
                "type": ""
              }
            ],
            "src": "3306:108:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3473:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3490:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3512:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint24",
                          "nodeType": "YulIdentifier",
                          "src": "3495:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3495:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3483:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3483:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3483:36:5"
                }
              ]
            },
            "name": "abi_encode_t_uint24_to_t_uint24",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3461:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3468:3:5",
                "type": ""
              }
            ],
            "src": "3420:105:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3594:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3611:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3633:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint24",
                          "nodeType": "YulIdentifier",
                          "src": "3616:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3616:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3604:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3604:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3604:36:5"
                }
              ]
            },
            "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3582:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3589:3:5",
                "type": ""
              }
            ],
            "src": "3531:115:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3707:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3724:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3747:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3729:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3729:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3717:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3717:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3717:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3695:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3702:3:5",
                "type": ""
              }
            ],
            "src": "3652:108:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3831:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3848:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3871:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3853:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3853:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3841:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3841:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3841:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3819:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3826:3:5",
                "type": ""
              }
            ],
            "src": "3766:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4007:143:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4017:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4029:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4040:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4025:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4025:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4017:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4116:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4129:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4140:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4125:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4125:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4053:62:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4053:90:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4053:90:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ISwapRouter_$187__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3979:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3991:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4002:4:5",
                "type": ""
              }
            ],
            "src": "3890:260:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4332:203:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4342:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4354:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4365:3:5",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4350:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4350:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4342:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4501:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4514:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4525:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4510:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4510:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4379:121:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4379:149:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4379:149:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4304:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4316:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4327:4:5",
                "type": ""
              }
            ],
            "src": "4156:379:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4637:122:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4647:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4659:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4670:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4655:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4655:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4647:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4725:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4738:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4749:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4734:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4734:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4683:41:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4683:69:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4683:69:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4609:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4621:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4632:4:5",
                "type": ""
              }
            ],
            "src": "4541:218:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4863:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4873:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4885:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4896:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4881:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4881:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4873:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4953:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4966:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4977:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4962:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4962:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4909:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4909:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4909:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4835:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4847:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4858:4:5",
                "type": ""
              }
            ],
            "src": "4765:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5038:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5048:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5077:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5059:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5059:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5048:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5020:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5030:7:5",
                "type": ""
              }
            ],
            "src": "4993:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5140:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5150:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5165:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5172:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5161:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5161:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5150:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5122:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5132:7:5",
                "type": ""
              }
            ],
            "src": "5095:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5271:47:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5281:31:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5296:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5303:8:5",
                        "type": "",
                        "value": "0xffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5292:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5292:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5281:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint24",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5253:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5263:7:5",
                "type": ""
              }
            ],
            "src": "5227:91:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5369:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5379:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5390:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5379:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5351:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5361:7:5",
                "type": ""
              }
            ],
            "src": "5324:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5486:85:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5496:69:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5559:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ISwapRouter_$187_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5509:49:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5509:56:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5496:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ISwapRouter_$187_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5466:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5476:9:5",
                "type": ""
              }
            ],
            "src": "5407:164:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5656:53:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5666:37:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5697:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5679:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5679:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5666:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ISwapRouter_$187_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5636:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5646:9:5",
                "type": ""
              }
            ],
            "src": "5577:132:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5758:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5815:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5824:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5827:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5817:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5817:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5817:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5781:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5806:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5788:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5788:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5778:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5778:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5771:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5771:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "5768:2:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5751:5:5",
                "type": ""
              }
            ],
            "src": "5715:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5886:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5943:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5952:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5955:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5945:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5945:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5945:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5909:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5934:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5916:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5916:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5906:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5906:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5899:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "5896:2:5"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5879:5:5",
                "type": ""
              }
            ],
            "src": "5843:122:5"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$187_to_t_address(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$187__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ISwapRouter_$187_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISwapRouter_$187_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$187_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "220:1685:4:-:0;;;395:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;463:11;450:24;;;;;;;;;;;;395:90;220:1685;;7:181:5;;114:6;108:13;99:22;;130:52;176:5;130:52;:::i;:::-;89:99;;;;:::o;194:322::-;;332:2;320:9;311:7;307:23;303:32;300:2;;;348:1;345;338:12;300:2;391:1;416:83;491:7;482:6;471:9;467:22;416:83;:::i;:::-;406:93;;362:147;290:226;;;;:::o;522:96::-;;588:24;606:5;588:24;:::i;:::-;577:35;;567:51;;;:::o;624:115::-;;709:24;727:5;709:24;:::i;:::-;698:35;;688:51;;;:::o;745:126::-;;822:42;815:5;811:54;800:65;;790:81;;;:::o;877:160::-;969:43;1006:5;969:43;:::i;:::-;962:5;959:54;949:2;;1027:1;1024;1017:12;949:2;939:98;:::o;220:1685:4:-;;;;;;;;;;;;",
  "deployedSourceMap": "220:1685:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;241:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:1377;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;351:37;384:4;351:37;:::o;241:39::-;;;:::o;491:1377::-;575:17;741:78;773:8;783:10;803:4;810:8;741:31;:78::i;:::-;894:67;921:8;939:10;952:8;894:26;:67::i;:::-;1225:48;1276:455;;;;;;;;1350:8;1276:455;;;;;;1398:9;1276:455;;;;;;384:4;1276:455;;;;;;1490:10;1276:455;;;;;;1540:15;1276:455;;;;1595:8;1276:455;;;;1651:1;1276:455;;;;1701:1;1276:455;;;;;1225:506;;1822:10;:27;;;1850:6;1822:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1810:47;;491:1377;;;;;;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:44;847:57;839:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:358;;;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2121:44;2109:57;2101:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:307;;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:143::-;;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;360:80;;;;:::o;446:552::-;;;;588:2;576:9;567:7;563:23;559:32;556:2;;;604:1;601;594:12;556:2;647:1;672:53;717:7;708:6;697:9;693:22;672:53;:::i;:::-;662:63;;618:117;774:2;800:53;845:7;836:6;825:9;821:22;800:53;:::i;:::-;790:63;;745:118;902:2;928:53;973:7;964:6;953:9;949:22;928:53;:::i;:::-;918:63;;873:118;546:452;;;;;:::o;1004:284::-;;1123:2;1111:9;1102:7;1098:23;1094:32;1091:2;;;1139:1;1136;1129:12;1091:2;1182:1;1207:64;1263:7;1254:6;1243:9;1239:22;1207:64;:::i;:::-;1197:74;;1153:128;1081:207;;;;:::o;1294:108::-;1371:24;1389:5;1371:24;:::i;:::-;1366:3;1359:37;1349:53;;:::o;1408:169::-;1514:56;1564:5;1514:56;:::i;:::-;1509:3;1502:69;1492:85;;:::o;1677:1623::-;1852:6;1847:3;1843:16;1944:4;1937:5;1933:16;1927:23;1963:63;2020:4;2015:3;2011:14;1997:12;1963:63;:::i;:::-;1869:167;2122:4;2115:5;2111:16;2105:23;2141:63;2198:4;2193:3;2189:14;2175:12;2141:63;:::i;:::-;2046:168;2295:4;2288:5;2284:16;2278:23;2314:61;2369:4;2364:3;2360:14;2346:12;2314:61;:::i;:::-;2224:161;2472:4;2465:5;2461:16;2455:23;2491:63;2548:4;2543:3;2539:14;2525:12;2491:63;:::i;:::-;2395:169;2650:4;2643:5;2639:16;2633:23;2669:63;2726:4;2721:3;2717:14;2703:12;2669:63;:::i;:::-;2574:168;2828:4;2821:5;2817:16;2811:23;2847:63;2904:4;2899:3;2895:14;2881:12;2847:63;:::i;:::-;2752:168;3014:4;3007:5;3003:16;2997:23;3033:63;3090:4;3085:3;3081:14;3067:12;3033:63;:::i;:::-;2930:176;3201:4;3194:5;3190:16;3184:23;3220:63;3277:4;3272:3;3268:14;3254:12;3220:63;:::i;:::-;3116:177;1821:1479;;;:::o;3306:108::-;3383:24;3401:5;3383:24;:::i;:::-;3378:3;3371:37;3361:53;;:::o;3420:105::-;3495:23;3512:5;3495:23;:::i;:::-;3490:3;3483:36;3473:52;;:::o;3531:115::-;3616:23;3633:5;3616:23;:::i;:::-;3611:3;3604:36;3594:52;;:::o;3652:108::-;3729:24;3747:5;3729:24;:::i;:::-;3724:3;3717:37;3707:53;;:::o;3766:118::-;3853:24;3871:5;3853:24;:::i;:::-;3848:3;3841:37;3831:53;;:::o;3890:260::-;;4040:2;4029:9;4025:18;4017:26;;4053:90;4140:1;4129:9;4125:17;4116:6;4053:90;:::i;:::-;4007:143;;;;:::o;4156:379::-;;4365:3;4354:9;4350:19;4342:27;;4379:149;4525:1;4514:9;4510:17;4501:6;4379:149;:::i;:::-;4332:203;;;;:::o;4541:218::-;;4670:2;4659:9;4655:18;4647:26;;4683:69;4749:1;4738:9;4734:17;4725:6;4683:69;:::i;:::-;4637:122;;;;:::o;4765:222::-;;4896:2;4885:9;4881:18;4873:26;;4909:71;4977:1;4966:9;4962:17;4953:6;4909:71;:::i;:::-;4863:124;;;;:::o;4993:96::-;;5059:24;5077:5;5059:24;:::i;:::-;5048:35;;5038:51;;;:::o;5095:126::-;;5172:42;5165:5;5161:54;5150:65;;5140:81;;;:::o;5227:91::-;;5303:8;5296:5;5292:20;5281:31;;5271:47;;;:::o;5324:77::-;;5390:5;5379:16;;5369:32;;;:::o;5407:164::-;;5509:56;5559:5;5509:56;:::i;:::-;5496:69;;5486:85;;;:::o;5577:132::-;;5679:24;5697:5;5679:24;:::i;:::-;5666:37;;5656:53;;;:::o;5715:122::-;5788:24;5806:5;5788:24;:::i;:::-;5781:5;5778:35;5768:2;;5827:1;5824;5817:12;5768:2;5758:79;:::o;5843:122::-;5916:24;5934:5;5916:24;:::i;:::-;5909:5;5906:35;5896:2;;5955:1;5952;5945:12;5896:2;5886:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\n\n\ncontract Swap {\n\n    ISwapRouter public immutable swapRouter;\n\n\n    // For this example, we will set the pool fee to 0.3%.    \n    uint24 public constant poolFee = 3000;\n\n    constructor(ISwapRouter _swapRouter) {        \n        swapRouter = _swapRouter;    \n    }\n\n    function swap(address _tokenIn, address _tokenOut,uint256 amountIn) public returns (uint256 amountOut) {        \n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of _tokenIn to this contract.        \n        TransferHelper.safeTransferFrom(_tokenIn, msg.sender, address(this), amountIn);\n        \n        // Approve the router to spend tokenIn.        \n        TransferHelper.safeApprove(_tokenIn, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.        \n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.        \n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({                \n            tokenIn: _tokenIn,                \n            tokenOut: _tokenOut,                \n            fee: poolFee,                \n            recipient: msg.sender,                \n            deadline: block.timestamp,                \n            amountIn: amountIn,                \n            amountOutMinimum: 0,                \n            sqrtPriceLimitX96: 0              \n            });\n        // The call to `exactInputSingle` executes the swap.        \n        amountOut = swapRouter.exactInputSingle(params);    \n    }\n\n    receive() payable external {}\n}",
  "sourcePath": "/home/hussain/projects/swap-api/contracts/Swap.sol",
  "ast": {
    "absolutePath": "project:/contracts/Swap.sol",
    "exportedSymbols": {
      "IERC20": [
        77
      ],
      "ISwapRouter": [
        187
      ],
      "IUniswapV3SwapCallback": [
        91
      ],
      "Swap": [
        444
      ],
      "TransferHelper": [
        358
      ]
    },
    "id": 445,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 360,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:4"
      },
      {
        "id": 361,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:19:4"
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "id": 362,
        "nodeType": "ImportDirective",
        "scope": 445,
        "sourceUnit": 188,
        "src": "78:68:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "id": 363,
        "nodeType": "ImportDirective",
        "scope": 445,
        "sourceUnit": 359,
        "src": "147:70:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 444,
        "linearizedBaseContracts": [
          444
        ],
        "name": "Swap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c31c9c07",
            "id": 365,
            "mutability": "immutable",
            "name": "swapRouter",
            "nodeType": "VariableDeclaration",
            "scope": 444,
            "src": "241:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$187",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 364,
              "name": "ISwapRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 187,
              "src": "241:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$187",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "089fe6aa",
            "id": 368,
            "mutability": "constant",
            "name": "poolFee",
            "nodeType": "VariableDeclaration",
            "scope": 444,
            "src": "351:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 366,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "351:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 367,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "384:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "432:53:4",
              "statements": [
                {
                  "expression": {
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 373,
                      "name": "swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "450:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$187",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 374,
                      "name": "_swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "463:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$187",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "src": "450:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$187",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "450:24:4"
                }
              ]
            },
            "id": 378,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "407:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapRouter_$187",
                    "typeString": "contract ISwapRouter"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "ISwapRouter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 187,
                    "src": "407:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$187",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:25:4"
            },
            "returnParameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:0:4"
            },
            "scope": 444,
            "src": "395:90:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "594:1274:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 392,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "773:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "783:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "783:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 397,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "803:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap_$444",
                              "typeString": "contract Swap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap_$444",
                              "typeString": "contract Swap"
                            }
                          ],
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "795:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 395,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "795:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "795:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 399,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "810:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 389,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "741:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$358_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 239,
                      "src": "741:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "741:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "741:78:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 405,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "921:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 408,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "939:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$187",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$187",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "931:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 406,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "931:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "931:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 410,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "952:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 402,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "894:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$358_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 331,
                      "src": "894:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "894:67:4"
                },
                {
                  "assignments": [
                    416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "params",
                      "nodeType": "VariableDeclaration",
                      "scope": 438,
                      "src": "1225:48:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "ISwapRouter.ExactInputSingleParams",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 115,
                        "src": "1225:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 430,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 419,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "1350:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 420,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "1398:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 421,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "1442:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 422,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1490:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1490:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 424,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1540:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1540:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 426,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "1595:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1651:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1701:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 417,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1276:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$187_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "1276:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1276:455:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1225:506:4"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 431,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "1810:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 434,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "1850:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 432,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "1822:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$187",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactInputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 123,
                        "src": "1822:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1822:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1810:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:47:4"
                }
              ]
            },
            "functionSelector": "df791e50",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_tokenIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "505:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "523:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "541:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:54:4"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "575:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "574:19:4"
            },
            "scope": 444,
            "src": "491:1377:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "1901:2:4",
              "statements": []
            },
            "id": 443,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1881:2:4"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:4"
            },
            "scope": 444,
            "src": "1874:29:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 445,
        "src": "220:1685:4"
      }
    ],
    "src": "32:1873:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Swap.sol",
      "exportedSymbols": {
        "IERC20": [
          77
        ],
        "ISwapRouter": [
          187
        ],
        "IUniswapV3SwapCallback": [
          91
        ],
        "Swap": [
          444
        ],
        "TransferHelper": [
          358
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".6"
          ]
        },
        "id": 360,
        "name": "PragmaDirective",
        "src": "32:24:4"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 361,
        "name": "PragmaDirective",
        "src": "57:19:4"
      },
      {
        "attributes": {
          "SourceUnit": 188,
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
          "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
          "scope": 445,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 362,
        "name": "ImportDirective",
        "src": "78:68:4"
      },
      {
        "attributes": {
          "SourceUnit": 359,
          "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
          "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
          "scope": 445,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 363,
        "name": "ImportDirective",
        "src": "147:70:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            444
          ],
          "name": "Swap",
          "scope": 445
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "c31c9c07",
              "mutability": "immutable",
              "name": "swapRouter",
              "scope": 444,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ISwapRouter",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ISwapRouter",
                  "referencedDeclaration": 187,
                  "type": "contract ISwapRouter"
                },
                "id": 364,
                "name": "UserDefinedTypeName",
                "src": "241:11:4"
              }
            ],
            "id": 365,
            "name": "VariableDeclaration",
            "src": "241:39:4"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "089fe6aa",
              "mutability": "constant",
              "name": "poolFee",
              "scope": 444,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint24",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint24",
                  "type": "uint24"
                },
                "id": 366,
                "name": "ElementaryTypeName",
                "src": "351:6:4"
              },
              {
                "attributes": {
                  "hexvalue": "33303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 3000",
                  "value": "3000"
                },
                "id": 367,
                "name": "Literal",
                "src": "384:4:4"
              }
            ],
            "id": 368,
            "name": "VariableDeclaration",
            "src": "351:37:4"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 444,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_swapRouter",
                      "scope": 378,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ISwapRouter",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ISwapRouter",
                          "referencedDeclaration": 187,
                          "type": "contract ISwapRouter"
                        },
                        "id": 369,
                        "name": "UserDefinedTypeName",
                        "src": "407:11:4"
                      }
                    ],
                    "id": 370,
                    "name": "VariableDeclaration",
                    "src": "407:23:4"
                  }
                ],
                "id": 371,
                "name": "ParameterList",
                "src": "406:25:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 372,
                "name": "ParameterList",
                "src": "432:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ISwapRouter"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 365,
                              "type": "contract ISwapRouter",
                              "value": "swapRouter"
                            },
                            "id": 373,
                            "name": "Identifier",
                            "src": "450:10:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 370,
                              "type": "contract ISwapRouter",
                              "value": "_swapRouter"
                            },
                            "id": 374,
                            "name": "Identifier",
                            "src": "463:11:4"
                          }
                        ],
                        "id": 375,
                        "name": "Assignment",
                        "src": "450:24:4"
                      }
                    ],
                    "id": 376,
                    "name": "ExpressionStatement",
                    "src": "450:24:4"
                  }
                ],
                "id": 377,
                "name": "Block",
                "src": "432:53:4"
              }
            ],
            "id": 378,
            "name": "FunctionDefinition",
            "src": "395:90:4"
          },
          {
            "attributes": {
              "functionSelector": "df791e50",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swap",
              "scope": 444,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokenIn",
                      "scope": 439,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 379,
                        "name": "ElementaryTypeName",
                        "src": "505:7:4"
                      }
                    ],
                    "id": 380,
                    "name": "VariableDeclaration",
                    "src": "505:16:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokenOut",
                      "scope": 439,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 381,
                        "name": "ElementaryTypeName",
                        "src": "523:7:4"
                      }
                    ],
                    "id": 382,
                    "name": "VariableDeclaration",
                    "src": "523:17:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "scope": 439,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 383,
                        "name": "ElementaryTypeName",
                        "src": "541:7:4"
                      }
                    ],
                    "id": 384,
                    "name": "VariableDeclaration",
                    "src": "541:16:4"
                  }
                ],
                "id": 385,
                "name": "ParameterList",
                "src": "504:54:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "scope": 439,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 386,
                        "name": "ElementaryTypeName",
                        "src": "575:7:4"
                      }
                    ],
                    "id": 387,
                    "name": "VariableDeclaration",
                    "src": "575:17:4"
                  }
                ],
                "id": 388,
                "name": "ParameterList",
                "src": "574:19:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransferFrom",
                              "referencedDeclaration": 239,
                              "type": "function (address,address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 358,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 389,
                                "name": "Identifier",
                                "src": "741:14:4"
                              }
                            ],
                            "id": 391,
                            "name": "MemberAccess",
                            "src": "741:31:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 380,
                              "type": "address",
                              "value": "_tokenIn"
                            },
                            "id": 392,
                            "name": "Identifier",
                            "src": "773:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 393,
                                "name": "Identifier",
                                "src": "783:3:4"
                              }
                            ],
                            "id": 394,
                            "name": "MemberAccess",
                            "src": "783:10:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Swap_$444",
                                      "typeString": "contract Swap"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 395,
                                    "name": "ElementaryTypeName",
                                    "src": "795:7:4"
                                  }
                                ],
                                "id": 396,
                                "name": "ElementaryTypeNameExpression",
                                "src": "795:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract Swap",
                                  "value": "this"
                                },
                                "id": 397,
                                "name": "Identifier",
                                "src": "803:4:4"
                              }
                            ],
                            "id": 398,
                            "name": "FunctionCall",
                            "src": "795:13:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 384,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 399,
                            "name": "Identifier",
                            "src": "810:8:4"
                          }
                        ],
                        "id": 400,
                        "name": "FunctionCall",
                        "src": "741:78:4"
                      }
                    ],
                    "id": 401,
                    "name": "ExpressionStatement",
                    "src": "741:78:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeApprove",
                              "referencedDeclaration": 331,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 358,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 402,
                                "name": "Identifier",
                                "src": "894:14:4"
                              }
                            ],
                            "id": 404,
                            "name": "MemberAccess",
                            "src": "894:26:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 380,
                              "type": "address",
                              "value": "_tokenIn"
                            },
                            "id": 405,
                            "name": "Identifier",
                            "src": "921:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISwapRouter_$187",
                                      "typeString": "contract ISwapRouter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 406,
                                    "name": "ElementaryTypeName",
                                    "src": "931:7:4"
                                  }
                                ],
                                "id": 407,
                                "name": "ElementaryTypeNameExpression",
                                "src": "931:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 365,
                                  "type": "contract ISwapRouter",
                                  "value": "swapRouter"
                                },
                                "id": 408,
                                "name": "Identifier",
                                "src": "939:10:4"
                              }
                            ],
                            "id": 409,
                            "name": "FunctionCall",
                            "src": "931:19:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 384,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 410,
                            "name": "Identifier",
                            "src": "952:8:4"
                          }
                        ],
                        "id": 411,
                        "name": "FunctionCall",
                        "src": "894:67:4"
                      }
                    ],
                    "id": 412,
                    "name": "ExpressionStatement",
                    "src": "894:67:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        416
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "params",
                          "scope": 438,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct ISwapRouter.ExactInputSingleParams",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ISwapRouter.ExactInputSingleParams",
                              "referencedDeclaration": 115,
                              "type": "struct ISwapRouter.ExactInputSingleParams"
                            },
                            "id": 415,
                            "name": "UserDefinedTypeName",
                            "src": "1225:34:4"
                          }
                        ],
                        "id": 416,
                        "name": "VariableDeclaration",
                        "src": "1225:48:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountIn",
                            "amountOutMinimum",
                            "sqrtPriceLimitX96"
                          ],
                          "tryCall": false,
                          "type": "struct ISwapRouter.ExactInputSingleParams memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ExactInputSingleParams",
                              "referencedDeclaration": 115,
                              "type": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 187,
                                  "type": "type(contract ISwapRouter)",
                                  "value": "ISwapRouter"
                                },
                                "id": 417,
                                "name": "Identifier",
                                "src": "1276:11:4"
                              }
                            ],
                            "id": 418,
                            "name": "MemberAccess",
                            "src": "1276:34:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 380,
                              "type": "address",
                              "value": "_tokenIn"
                            },
                            "id": 419,
                            "name": "Identifier",
                            "src": "1350:8:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 382,
                              "type": "address",
                              "value": "_tokenOut"
                            },
                            "id": 420,
                            "name": "Identifier",
                            "src": "1398:9:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 368,
                              "type": "uint24",
                              "value": "poolFee"
                            },
                            "id": 421,
                            "name": "Identifier",
                            "src": "1442:7:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 422,
                                "name": "Identifier",
                                "src": "1490:3:4"
                              }
                            ],
                            "id": 423,
                            "name": "MemberAccess",
                            "src": "1490:10:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 424,
                                "name": "Identifier",
                                "src": "1540:5:4"
                              }
                            ],
                            "id": 425,
                            "name": "MemberAccess",
                            "src": "1540:15:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 384,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 426,
                            "name": "Identifier",
                            "src": "1595:8:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 427,
                            "name": "Literal",
                            "src": "1651:1:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 428,
                            "name": "Literal",
                            "src": "1701:1:4"
                          }
                        ],
                        "id": 429,
                        "name": "FunctionCall",
                        "src": "1276:455:4"
                      }
                    ],
                    "id": 430,
                    "name": "VariableDeclarationStatement",
                    "src": "1225:506:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 387,
                              "type": "uint256",
                              "value": "amountOut"
                            },
                            "id": 431,
                            "name": "Identifier",
                            "src": "1810:9:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "exactInputSingle",
                                  "referencedDeclaration": 123,
                                  "type": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 365,
                                      "type": "contract ISwapRouter",
                                      "value": "swapRouter"
                                    },
                                    "id": 432,
                                    "name": "Identifier",
                                    "src": "1822:10:4"
                                  }
                                ],
                                "id": 433,
                                "name": "MemberAccess",
                                "src": "1822:27:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 416,
                                  "type": "struct ISwapRouter.ExactInputSingleParams memory",
                                  "value": "params"
                                },
                                "id": 434,
                                "name": "Identifier",
                                "src": "1850:6:4"
                              }
                            ],
                            "id": 435,
                            "name": "FunctionCall",
                            "src": "1822:35:4"
                          }
                        ],
                        "id": 436,
                        "name": "Assignment",
                        "src": "1810:47:4"
                      }
                    ],
                    "id": 437,
                    "name": "ExpressionStatement",
                    "src": "1810:47:4"
                  }
                ],
                "id": 438,
                "name": "Block",
                "src": "594:1274:4"
              }
            ],
            "id": 439,
            "name": "FunctionDefinition",
            "src": "491:1377:4"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "receive",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 444,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 440,
                "name": "ParameterList",
                "src": "1881:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 441,
                "name": "ParameterList",
                "src": "1901:0:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 442,
                "name": "Block",
                "src": "1901:2:4"
              }
            ],
            "id": 443,
            "name": "FunctionDefinition",
            "src": "1874:29:4"
          }
        ],
        "id": 444,
        "name": "ContractDefinition",
        "src": "220:1685:4"
      }
    ],
    "id": 445,
    "name": "SourceUnit",
    "src": "32:1873:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x442326D68f9423e375a0caF0BE494B40a44AeEfB",
      "transactionHash": "0x5058ed4819d763c58ad44fef2fbbf78687ca2c54b75d9b6a8b07f5c615deeaba"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-27T09:18:53.501Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}